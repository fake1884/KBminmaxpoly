plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y, cex=2, lwd=3)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R[[1]], plot.KB.R[[2]], lty="solid", cex=2, lwd=3)
lines(plot.KB.R[[1]], plot.KB.R[[3]], lty="solid", cex=2, lwd=3)
lines(plot.KB.minmax[[1]], plot.KB.minmax[[2]], lty="dotted", cex=2, lwd=3)
lines(plot.KB.minmax[[1]], plot.KB.minmax[[3]], lty="dotted", cex=2, lwd=3)
legend(x="topleft", legend=c("R", "[0,1]"),
col=c("black", "black"),cex=2, lty=c("solid", "dotted"), lwd = 3)
dev.off()
par.bsp.poly=KB.poly.fast(alpha, nobs, grad.1, niter, inv.X.1, a=0, b=1, ngridpoly = 100)
plot.KB.poly=plot.KB(nobs, grad.1, inv.X.1, beta.1, sigma.1, par.bsp.poly[[1]], ngrid = length(y))
pdf("man/0-Latex/graphics/Beispiel/Bsp-KB-poly.pdf",
width=10,height=8)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y, cex=2, lwd=3)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R[[1]], plot.KB.R[[2]], lty="solid", cex=2, lwd=3)
lines(plot.KB.R[[1]], plot.KB.R[[3]], lty="solid", cex=2, lwd=3)
lines(plot.KB.minmax[[1]], plot.KB.minmax[[2]], lty="dotted", cex=2, lwd=3)
lines(plot.KB.minmax[[1]], plot.KB.minmax[[3]], lty="dotted", cex=2, lwd=3)
lines(plot.KB.poly[[1]], plot.KB.poly[[2]], lty="dashed", cex=2, lwd=3)
lines(plot.KB.poly[[1]], plot.KB.poly[[3]], lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("R", "[0,1]", "Polynom"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dotted", "dashed"))
dev.off()
beta.2=c(10,5,-4,7)
sigma=1
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
beta.2=c(0,15,-14,3)
sigma=1
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new=X %*% beta.2 + t(e.2)
grad.3=2
fit.3=OLS(grad.3, y, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
pdf("man/0-Latex/graphics/Beispiel/Bsp-beide-in-einem-plot.pdf",
width=10,height=8)
dev.off()
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Grad 3", "Grad 4"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dots(x,y.new)
points(x,y.new)
beta.2=c(7,5,-14,3)
sigma=1
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new=X %*% beta.2 + t(e.2)
grad.3=2
fit.3=OLS(grad.3, y, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
y.new
y
y.new = y.new.raw/max(y.new.raw)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
dev.off()
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
beta.2=c(7,5,-1,3)
sigma=1
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=2
fit.3=OLS(grad.3, y, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Data Set 1", "Data Set 2"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
beta.2=c(7,5,-1,3)
sigma=0.5
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=2
fit.3=OLS(grad.3, y, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
fit.3[[2]][1]
fit.1[[2]][1]
beta.2=c(15,0,-1,3)
sigma=0.5
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=2
fit.3=OLS(grad.3, y, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Data Set 1", "Data Set 2"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Data Set 1", "Data Set 2"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
fit.3[[2]][1]
fit.1[[2]][1]
fit.1[[2]][2]
fit.3[[2]][2]
fit.3
fit.3[[2]]
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
fit.3[[2]]
fit.1[[2]]
lm(y.new ~ x)
beta.2=c(15,0,-1,3)
sigma=0.005
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
sigma.3
beta.3
beta.2=c(15,1,0,0)
sigma=0.005
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3+fit.3[[2]][5]*x^4,
add=T, lty="dashed", cex=2, lwd=3)
fit.3[[2]]
fit=lm(y.new~poly(x,degree=grad,raw=T))
fit
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3,
add=T, lty="dashed", cex=2, lwd=3)
beta.2=c(15,1,-3,9)
sigma=0.005
sigma=0.5
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
points(x,y.new, cex = 2)
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new, cex = 2)
points(x,y.new, cex = 2, lwd = 3)
points(x,y.new, cex = 2, lwd = 3, pcw=2)
points(x,y.new, cex = 2, lwd = 3, pch=2)
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new, cex = 2, lwd = 3, pch=2)
beta.2=c(15,1,-1,9)
sigma=0.5
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new, cex = 2, lwd = 3, pch=2)
beta.2=c(10,1,-1,9)
sigma=0.5
e.2=rmvnorm(1,mean=rep(0,length(x.raw)), sigma=sigma*I.mat)
y.new.raw = X %*% beta.2 + t(e.2)
y.new = y.new.raw/max(y.new.raw)
grad.3=3
fit.3=OLS(grad.3, y.new, nobs)
inv.X.3=fit.3[[1]]
beta.3=fit.3[[2]]
sigma.3=fit.3[[3]]
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y.new, cex = 2, lwd = 3, pch=2)
curve(fit.1[[2]][1]+fit.1[[2]][2]*x+fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
curve(fit.3[[2]][1]+fit.3[[2]][2]*x+fit.3[[2]][3]*x^2+fit.3[[2]][4]*x^3,
add=T, lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Data Set 1", "Data Set 2"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
alpha=0.05
data.1=y
data.2=y.new
erg=f.test(alpha, grad.1, grad.3, data.1, data.2)
teststat=erg[1]
q=erg[2]
teststat
q
alpha=0.05
delta.mat=Delta(inv.X.1, inv.X.3)
par.bsp.vergl=KB.poly.fast(alpha, nobs, max(grad.1, grad.3), niter, delta.mat[[1]], a=0, b=1,
ngridpoly = 50)
plot.bsp.vergl=plot.KB.vergl(y, y.new, grad.3, delta.mat[[1]], beta.1, beta.3, sigma.1, sigma.3,
par.bsp.vergl[[1]], ngrid = length(y))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.vergl[[2]]),max(plot.bsp.vergl[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
curve(fit.1[[2]][1]-fit.3[[2]][1]+(fit.1[[2]][2]-fit.3[[2]][2])*x+(fit.1[[2]][3]-fit.3[[2]][3])*x^2+
(fit.1[[2]][4]-fit.3[[2]][4])*x^3-fit.3[[2]][5]*x^4
, add=T, cex=2, lwd=3)
lines(plot.bsp.vergl[[1]], plot.bsp.vergl[[2]], lty=1, cex=2, lwd=3)
lines(plot.bsp.vergl[[1]], plot.bsp.vergl[[3]], lty=1, cex=2, lwd=3)
curve(fit.1[[2]][1]-fit.3[[2]][1]+(fit.1[[2]][2]-fit.3[[2]][2])*x+(fit.1[[2]][3]-fit.3[[2]][3])*x^2+
(fit.1[[2]][4]-fit.3[[2]][4])*x^3, add=T, cex=2, lwd=3)
alpha
nobs
niter
k = 2
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
k = 2
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% inv.X.1 %*% t(I.tilde)
beta.2=I.tilde %*% beta
beta.2=I.tilde %*% beta.1
beta.2
beta.1
par.bsp.R.nested = KB.poly.fast(alpha, support_data_R_pruef, k-1, niter, V, a, b, ngridpoly)
nobs
grad
par.bsp.R.nested = KB.poly.fast(alpha, nobs, k-1, niter, V, a, b, ngridpoly)
a
b
ngridpoly
par.bsp.R.nested = KB.poly.fast(alpha, nobs, k-1, niter, V, a = 0, b = 1, ngridpoly = 500)
par.bsp.R.nested = KB.poly.fast(alpha, nobs, k-1, niter, V, a = 0, b = 1, ngridpoly = 50)
par.bsp.R.nested
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X, beta.1, sigma.1, factor = par.bsp.R.nested, k, ngrid)
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X.1, beta.1, sigma.1, factor = par.bsp.R.nested, k, ngrid)
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X.1, beta.1, sigma.1, factor = par.bsp.R.nested, k,
ngrid = nobs)
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X.1, beta.1, sigma.1, factor = par.bsp.R.nested, k,
ngrid = nobs)
sigma.1
par.bsp.R.nested
par.bsp.R.nested[[1]] = KB.poly.fast(alpha, nobs, k-1, niter, V, a = 0, b = 1, ngridpoly = 50)
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X.1, beta.1, sigma.1, factor = par.bsp.R.nested, k,
ngrid = nobs)
par.bsp.R.nested = KB.poly.fast(alpha, nobs, k-1, niter, V, a = 0, b = 1, ngridpoly = 50)[[1]]
plot.KB.R.nested = plot.KB.pruef(nobs, grad, inv.X.1, beta.1, sigma.1, factor = par.bsp.R.nested, k,
ngrid = nobs)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.nested[[2]]),max(plot.bsp.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(plot.bsp.vergl[[1]], plot.bsp.vergl[[2]], lty=1, cex=2, lwd=3)
lines(plot.bsp.vergl[[1]], plot.bsp.vergl[[3]], lty=1, cex=2, lwd=3)
lines(c(1,0),c(0,0), cex=2, lwd=3)
curve(fit.1[[2]][3]x^2+fit.1[[2]][4]*x^3, add=T)
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T)
grad
grad.1
Plot.pruef("Y.10", 5, 1, "man/0-Latex/graphics/Stammzellen-10kPa/10kPa-Grad-5-KB.pdf")
devtools::load_all()
Plot.pruef("Y.10", 5, 1, "man/0-Latex/graphics/Stammzellen-10kPa/10kPa-Grad-5-KB.pdf")
library("nlme", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
Plot.pruef("Y.10", 5, 1, "man/0-Latex/graphics/Stammzellen-10kPa/10kPa-Grad-5-KB.pdf")
devtools::load_all()
Plot.pruef("Y.10", 5, 1, "man/0-Latex/graphics/Stammzellen-10kPa/10kPa-Grad-5-KB.pdf")
data.set=Y.10
alpha=0.05
niter=1000
nobs=length(data.set)
ngridpoly=nobs
ngrid=nobs
a=0 # diese Werte definieren A
b=1
time=0:(nobs-1)/(nobs-1)
time.2=time^2
time.3=time^3
time.4=time^4
time.5=time^5
time.6=time^6
alpha=0.05
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
grad=5
k=1
alpha=0.05
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
Y.gls.5 <- gls(data.set ~ time+time.2+time.3+time.4+time.5, correlation=corAR1())
aux.1 = exp(summary(Y.gls.5)$modelStruct[[1]][1])
phi.5 = (aux.1 - 1) / (aux.1 + 1)
R=Upsilon_fun(phi.5, nobs)[[1]]
inv.trafo.R=sqrt_inv_mat(R)[[1]]
X.trafo= inv.trafo.R %*% X
X.mat.trafo=t(X.trafo) %*% X.trafo
X.mat.inv.5=solve(X.mat.trafo)
Y.gls.6 <- gls(data.set ~ time+time.2+time.3+time.4+time.5+time.6, correlation=corAR1())
aux.1 = exp(summary(Y.gls.6)$modelStruct[[1]][1])
phi.6 = (aux.1 - 1) / (aux.1 + 1)
R=Upsilon_fun(phi.6, nobs)[[1]]
inv.trafo.R=sqrt_inv_mat(R)[[1]]
X.trafo= inv.trafo.R %*% X
X.mat.trafo=t(X.trafo) %*% X.trafo
X.mat.inv.6=solve(X.mat.trafo)
if(grad==5){beta=Y.gls.5$coeff
}else if(grad==6){beta=Y.gls.6$coeff
}else{return("error")}
if(grad==5){sigma=Y.gls.5$sigma
}else if(grad==6){sigma=Y.gls.6$sigma
}else{return("error")}
if(grad==5){X.mat.inv=X.mat.inv.5
}else if(grad==6){X.mat.inv=X.mat.inv.6
}else{return("error")}
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
beta.2=I.tilde %*% beta
if(k==1){x.2=x^(grad)
}else if(k==2){x.2= matrix(c(x^(grad-1),x^(grad)), ncol=2)
}else{return("error")}
par.bsp.R=KB.poly.fast(alpha = 0.05, nobs, k-1, niter, V, a, b, ngridpoly)
V
X.mat.inv
X.mat.trafo
X.trafo
sqrt_inv_mat(R)
sqrt_inv_mat(R)[[1]]
R
eig <- eigen(R)
ew <- diag(length(eig$values))
eig
ew
ew <- diag(length(eig$values))
for(i in 1:length(eig$values)){ew[i,i]=eig$val[i]}
ew
eig
?eigen
eig$val
eig <- eigen(R)
ew <- diag(length(eig$values))
for(i in 1:length(eig$values)){ew[i,i]=1/sqrt(eig$val[i])}
ev <- eig$vec
ev.1 <- solve(ev)
R.trafo <- ev %*% ew.sq %*% ev.1
ev.1 <- solve(ev)
R.trafo <- ev %*% ew %*% ev.1
R.trafo
devtools::load_all()
Plot.pruef("Y.10", 5, 1, "man/0-Latex/graphics/Stammzellen-10kPa/10kPa-Grad-5-KB.pdf")
pdf("man/0-Latex/graphics/Beispiel/Bsp-KB-nested.pdf", width=10,height=8)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
dev.off()
dev.off()
pdf("man/0-Latex/graphics/Beispiel/Bsp-KB-nested.pdf", width=10,height=8)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot.KB.R.nested
par.bsp.R.nested
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
dev.off()
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], lty=1, cex=2, lwd=3)
dev.off()
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], lty=1, cex=2, lwd=3)
legend(x=legendplace, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x=topleft, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x="topleft", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3, lty="dotted")
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], lty=1, cex=2, lwd=3)
legend(x="topleft", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3, lty="dotted")
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], lty=1, cex=2, lwd=3, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], lty=1, cex=2, lwd=3, lwd=3)
legend(x="topleft", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3, lty="dotted")
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], cex=2, lwd=3, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], cex=2, lwd=3, lwd=3)
legend(x="topleft", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3, lty="dotted")
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], cex=2, lwd=3, lwd=3)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R.nested[[2]]),max(plot.KB.R.nested[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3, lty="dotted")
curve(fit.1[[2]][3]*x^2+fit.1[[2]][4]*x^3, add=T, cex=2, lwd=3, lty="dashed")
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.R.nested[[1]], plot.KB.R.nested[[3]], lty=1, cex=2, lwd=3)
legend(x="topleft", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
devtools::load_all(".")
Make.data.R()
devtools::load_all(".")
Make.data.R()
devtools::load_all(".")
cov.R.R=NA
system.time({cov.R.R=Coverage.prob.fun("R", "R")})
cov.R.poly.fast=NA
system.time({cov.R.poly.fast=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1000, ngridpoly = 500)})
devtools::load_all(".")
Make.data.R()
devtools::load_all(".")
cov.R.R=NA
system.time({cov.R.R=Coverage.prob.fun("R", "R")})
cov.R.poly.fast=NA
system.time({cov.R.poly.fast=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1000, ngridpoly = 500)})
cov.R.minmax=NA
system.time({cov.R.minmax=Coverage.prob.fun("R", "minmax", niter = 1000)})
