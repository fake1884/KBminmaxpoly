plot.KB.R=plot.KB(support_data_R$nobs, support_data_R$grad, support_data_R$X.mat.inv,
data_modelR_estR_beta[,i], data_modelR_estR_sigma[i], par.bsp.R[[1]],
support_data_R$ngrid)
set.seed(100)
ntest=1000
grad=1
nobs=200
beta=c(10,5)
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
mu=X%*%beta
sigma.true=sqrt(var(mu))/2  ##choose SNR 1 (low) or 3 (medium)
I=matrix(diag(nobs),nrow=nobs,ncol=nobs)
data_R_true <- (X %*% beta)
alpha=0.05
ngrid=nobs
X.mat=t(X) %*% X
X.mat.inv=solve(X.mat)
a=0
b=1
data_R_test=matrix(rep(rep(NA, ntest), nobs), nrow=nobs)
for(i in 1:ntest)
{
# wahre Werte erzeugen
e=mvtnorm::rmvnorm(1,mean=rep(0,length(x.raw)),sigma.true[1]*I)
data_R_test[,i]=X %*% beta + t(e)
}
data_modelR_estR_beta=matrix(rep(rep(NA, ntest), grad+1), nrow=grad+1)
data_modelR_estR_sigma=matrix(rep(rep(NA, ntest), 1), nrow=1)
for(i in 1:ntest)
{
# Parameter schÃ¤tzen
fit.1=lm(data_R_test[,i]~poly(x,degree=grad,raw=T))
data_modelR_estR_beta[,i]=fit.1$coeff
data_modelR_estR_sigma[i]=summary(fit.1)$sigma
}
support_data_R <- list(ntest, nobs, grad ,beta, x, X, sigma.true, alpha, ngrid, X.mat, X.mat.inv,
a, b)
names(support_data_R) <- paste(c("ntest", "nobs", "grad" ,"beta", "x", "X", "sigma.true", "alpha", "ngrid",
"X.mat", "X.mat.inv", "a", "b"), sep="")
devtools::use_data(data_R_test, overwrite = T)
devtools::use_data(data_R_true, overwrite = T)
devtools::use_data(data_modelR_estR_beta, overwrite = T)
devtools::use_data(data_modelR_estR_sigma, overwrite = T)
devtools::use_data(support_data_R, overwrite = T)
plot(x, data_R_test[,1])
lines(x, data_R_true)
data_modelR_estR_beta[,1]
X
lines(x, X %*% data_modelR_estR_beta[,1])
data_modelR_estR_beta[,1]
par.bsp.R=KB.R(support_data_R$alpha, data_R_test[,i], support_data_R$grad, support_data_R$X.mat.inv)
i
i=1
par.bsp.R=KB.R(support_data_R$alpha, data_R_test[,i], support_data_R$grad, support_data_R$X.mat.inv)
par.bsp.R=KB.R(support_data_R$alpha, data_R_test[,i], support_data_R$grad, support_data_R$X.mat.inv)
par.bsp.R
plot.KB.R=plot.KB(support_data_R$nobs, support_data_R$grad, support_data_R$X.mat.inv,
data_modelR_estR_beta[,i], data_modelR_estR_sigma[i], par.bsp.R[[1]],
support_data_R$ngrid)
lines(x, plot.KB.R[2])
length(plot.KB.R[2])
length(plot.KB.R[[2]])
length(plot.KB.R[[2]])
lines(x, plot.KB.R[[2]])
lines(x, plot.KB.R[[2]], col="Red")
lines(x, plot.KB.R[[3]], col="Red")
Test.function(support_data_R$nobs, plot.KB.R[[2]], plot.KB.R[[3]], model.type)
model.type="R"
Test.function(support_data_R$nobs, plot.KB.R[[2]], plot.KB.R[[3]], model.type)
i=2
plot(x, data_R_test[,2])
par.bsp.R=KB.R(support_data_R$alpha, data_R_test[,i], support_data_R$grad, support_data_R$X.mat.inv)
plot.KB.R=plot.KB(support_data_R$nobs, support_data_R$grad, support_data_R$X.mat.inv,
data_modelR_estR_beta[,i], data_modelR_estR_sigma[i], par.bsp.R[[1]],
support_data_R$ngrid)
lines(x, plot.KB.R[[3]], col="Red")
lines(x, plot.KB.R[[2]], col="Red")
lines(x, data_data_R_true)
lines(x, data_R_true)
Coverage.prob.fun("R", "R")
plot(x, data_R_test[,100])
plot(x, data_R_test[,1000])
devtools::load_all(".")
Make.data.R()
devtools::load_all(".")
Coverage.prob.fun("R", "R")
devtools::load_all(".")
Coverage.prob.fun("R", "R")
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 5000, ngridpoly = 100)})
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 50, ngridpoly = 100)})
devtools::load_all(".")
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 50, ngridpoly = 100)})
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
devtools::load_all(".")
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
devtools::load_all(".")
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
i=1
par.bsp.R=KB.poly.fast(support_data_R$alpha, support_data_R$nobs, support_data_R$grad,
niter,support_data_R$X.mat.inv, support_data_R$a,
support_data_R$b, ngridpoly)
ngridpoly=100
par.bsp.R=KB.poly.fast(support_data_R$alpha, support_data_R$nobs, support_data_R$grad,
niter,support_data_R$X.mat.inv, support_data_R$a,
support_data_R$b, ngridpoly)
niter=1
par.bsp.R=KB.poly.fast(support_data_R$alpha, support_data_R$nobs, support_data_R$grad,
niter,support_data_R$X.mat.inv, support_data_R$a,
support_data_R$b, ngridpoly)
par.bsp.R
?paste
paste("tests/Funktion_h/test.pdf")
paste("tests/Funktion_h/test.pdf", sep="")
paste(c("tests/Funktion_h/test.pdf",i), sep="")
paste(c("tests/Funktion_h/test.pdf",i), sep=" ")
paste("tests/Funktion_h/test.pdf",i, sep=" ")
paste("tests/Funktion_h/test.pdf",i, sep="")
paste("tests/Funktion_h/test,i,.pdf", sep="")
paste("tests/Funktion_h/test",i,".pdf", sep="")
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
a=0
b=1
ngridploy=100
seq(a, b, len = ngridpoly + 1)
devtools::load_all(".")
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
devtools::load_all(".")
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 100)})
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1, ngridpoly = 10)})
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 2, ngridpoly = 10)})
cov.poly.fast.R=NA
system.time({cov.poly.fast.R=Coverage.prob.fun("R", "minmax-poly-fast", niter = 1000, ngridpoly = 100)})
Coverage.prob.fun("R", "R")
cov.R.R=NA
system.time({cov.R.R=Coverage.prob.fun("R", "R")})
cov.R.minmax=NA
system.time({cov.R.minmax=Coverage.prob.fun("R", "minmax", niter = 1000)})
cov.R.minmax=NA
system.time({cov.R.minmax=Coverage.prob.fun("R", "minmax", niter = 1000)})
cov.R.poly=NA
system.time({cov.R.poly=Coverage.prob.fun("R", "minmax-poly", niter = 1000)})
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.vergl.4.5[[2]])-0.01,max(plot.bsp.vergl.4.5[[3]])+0.01),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
?par
par(mar=c(5.1,4.1,4.1,2.1)
)
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,4.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par("mar")
par(mar=c(10.1,4.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,4.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,3.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
devtools::load_all(".")
nobs.10=length(Y.10)
time.10.raw=c(0:(nobs.10-1))
time.10=time.10.raw/max(time.10.raw)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
plot(time.10, Y.10, type="l", main="10 kPa", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
plot(time.10, Y.10, type="l", main="10 kPa", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
nobs.30=length(Y.30)
time.30.raw=c(0:(nobs.30-1))
time.30=time.30.raw/max(time.30.raw)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot(0,0,xlim=c(0,1),ylim=c(0,1), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
library("nlme")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
par(mar=c(5.1,5.1,4.1,2.1))
nobs.10=length(Y.10)
time.10.raw=c(0:(nobs.10-1))
time.10=time.10.raw/max(time.10.raw)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
nobs.30=length(Y.30)
time.30.raw=c(0:(nobs.30-1))
time.30=time.30.raw/max(time.30.raw)
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
grad.5=5
time=1:length(Y.10)/length(Y.10)
nobs=length(Y.10)
time.2=time^2
time.3=time^3
time.4=time^4
time.5=time^5
Y.gls.10 <- gls(Y.10~time+time.2+time.3+time.4+time.5,correlation=corAR1())
beta.10=Y.gls.10$coeff
sigma.10=Y.gls.10$sigma
X.10=matrix(data=NA,nrow=nobs,ncol=(grad.5+1))
for(j in 1:nobs){
for(i in 1:(grad.5+1)){X.10[j,i]=time[j]^(i-1)}
}
X.mat.10=t(X.10) %*% X.10
inv.X.10=solve(X.mat.10)
Y.gls.30 <- gls(Y.30~time+time.2+time.3+time.4+time.5,correlation=corAR1())
beta.30=Y.gls.30$coeff
sigma.30=Y.gls.30$sigma
X.30=matrix(data=NA,nrow=nobs,ncol=(grad.5+1))
for(j in 1:nobs){
for(i in 1:(grad.5+1)){X.30[j,i]=time[j]^(i-1)}
}
X.mat.30=t(X.30) %*% X.30
inv.X.30=solve(X.mat.30)
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=5, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=5, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.10vs30[[2]]),max(plot.bsp.10vs30[[3]])),
xlab="relative Zeit", ylab="relatives GrÃ¶Ãe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
curve(beta.10[1]-beta.30[1] + (beta.10[2]-beta.30[2])*x+
(beta.10[3]-beta.30[3])*x^2+(beta.10[4]-beta.30[4])*x^3+
(beta.10[5]-beta.30[5])*x^4+(beta.10[6]-beta.30[6])*x^5,col="black", add=T, lwd=3)
lines(plot.bsp.10vs30[[1]], plot.bsp.10vs30[[2]], col="black", lwd=3)
lines(plot.bsp.10vs30[[1]], plot.bsp.10vs30[[3]], col="black", lwd=3)
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/vergleich-10vs30-poly5.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.10vs30[[2]]),max(plot.bsp.10vs30[[3]])),
xlab="relative Zeit", ylab="relatives GrÃ¶Ãe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relatives GrÃ¶Ãe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
data=Y.10
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
data="Y.10"
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
alpha=0.05
niter=1000
nobs=length(data.set)
ngridpoly=nobs
ngrid=nobs
a=0 # diese Werte definieren A
b=1
time=0:(nobs-1)/(nobs-1)
time.2=time^2
time.3=time^3
time.4=time^4
time.5=time^5
time.6=time^6
alpha=0.05
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
X.mat=t(X) %*% X
grad=5
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
X.mat=t(X) %*% X
X.mat.inv=solve(X.mat)
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
k=1
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
Y.gls.5 <- gls(data.set ~ time+time.2+time.3+time.4+time.5, correlation=corAR1())
Y.gls.6 <- gls(data.set ~ time+time.2+time.3+time.4+time.5+time.6, correlation=corAR1())
if(grad==5){beta=Y.gls.5$coeff
}else if(grad==6){beta=Y.gls.6$coeff
}else{return("error")}
if(grad==5){sigma=Y.gls.5$sigma
}else if(grad==6){sigma=Y.gls.6$sigma
}else{return("error")}
beta.2=I.tilde %*% beta
if(k==1){x.2=x^(grad)
}else if(k==2){x.2= matrix(c(x^(grad-1),x^(grad)), ncol=2)
}else{return("error")}
par.bsp.R=KB.poly.fast(alpha = 0.05, nobs, k-1, niter, V, a, b, ngridpoly)
plot.KB.R=plot.KB.pruef( nobs , grad, X.mat.inv , beta, sigma, factor = par.bsp.R[[1]], k, ngrid )
if(plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0){legendplacetb="top"}
else if(plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0){legendplacetb="bottom"}
else{legendplacetb="bottom"}
if(plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0){legendplacetb="top"}else if(plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0){legendplacetb="bottom"}else{legendplacetb="bottom"}
if (plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0)
{legendplacetb="top"}else
if (plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0)
{legendplacetb="bottom"}else
{legendplacetb="bottom"}
legendplacetb
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y=legendplacetb, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x="right", y=legendplacetb, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y="bottom", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y="bottom", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
# Graphik erzeugen
if (plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="legendplace", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x=legendplace, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
plot.KB.R[[2]][nobs]
plot.KB.R[[3]]
plot.KB.R[[3]][nobs]
legendplace
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
legendplace
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else if(data == "Y.30" && k == 2)
{legendplace="toprightleft"}else
{legendplace="bottomleft"}
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
