plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,3.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relativer Unterschied", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
devtools::load_all(".")
nobs.10=length(Y.10)
time.10.raw=c(0:(nobs.10-1))
time.10=time.10.raw/max(time.10.raw)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
plot(time.10, Y.10, type="l", main="10 kPa", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
plot(time.10, Y.10, type="l", main="10 kPa", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
nobs.30=length(Y.30)
time.30.raw=c(0:(nobs.30-1))
time.30=time.30.raw/max(time.30.raw)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot(0,0,xlim=c(0,1),ylim=c(0,1), xlab="relative Zeit",
ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
library("nlme")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
par(mar=c(5.1,5.1,4.1,2.1))
nobs.10=length(Y.10)
time.10.raw=c(0:(nobs.10-1))
time.10=time.10.raw/max(time.10.raw)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
pdf("man/0-Latex/graphics/Stammzellen-10kPa/10kPa-data.pdf", width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.10, Y.10, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
nobs.30=length(Y.30)
time.30.raw=c(0:(nobs.30-1))
time.30=time.30.raw/max(time.30.raw)
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-30kPa/30kPa-data.pdf",  width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time.30, Y.30, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
grad.5=5
time=1:length(Y.10)/length(Y.10)
nobs=length(Y.10)
time.2=time^2
time.3=time^3
time.4=time^4
time.5=time^5
Y.gls.10 <- gls(Y.10~time+time.2+time.3+time.4+time.5,correlation=corAR1())
beta.10=Y.gls.10$coeff
sigma.10=Y.gls.10$sigma
X.10=matrix(data=NA,nrow=nobs,ncol=(grad.5+1))
for(j in 1:nobs){
for(i in 1:(grad.5+1)){X.10[j,i]=time[j]^(i-1)}
}
X.mat.10=t(X.10) %*% X.10
inv.X.10=solve(X.mat.10)
Y.gls.30 <- gls(Y.30~time+time.2+time.3+time.4+time.5,correlation=corAR1())
beta.30=Y.gls.30$coeff
sigma.30=Y.gls.30$sigma
X.30=matrix(data=NA,nrow=nobs,ncol=(grad.5+1))
for(j in 1:nobs){
for(i in 1:(grad.5+1)){X.30[j,i]=time[j]^(i-1)}
}
X.mat.30=t(X.30) %*% X.30
inv.X.30=solve(X.mat.30)
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=5, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=5, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
pdf("man/0-Latex/graphics/Stammzellen-Vergleich/Vergleich-10vs30-poly5.pdf", width = 10, height = 8)
par(mar=c(5.1,5.1,4.1,2.1))
plot(time,Y.10,type="l",xlab="Zeit", ylab="Stammzellen", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(time,Y.30, lwd=3)
curve(beta.10[1]+beta.10[2]*x+beta.10[3]*x^2+beta.10[4]*x^3+
beta.10[5]*x^4+beta.10[6]*x^5,col="black", add=T, lwd=2, lty="solid")
curve(beta.30[1]+beta.30[2]*x+beta.30[3]*x^2+beta.30[4]*x^3+
beta.30[5]*x^4+beta.30[6]*x^5,col="black", add=T, lwd=2, lty="dashed")
legend(x="topleft", legend=c("10kPa", "30kPa"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.10vs30[[2]]),max(plot.bsp.10vs30[[3]])),
xlab="relative Zeit", ylab="relatives Größe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
curve(beta.10[1]-beta.30[1] + (beta.10[2]-beta.30[2])*x+
(beta.10[3]-beta.30[3])*x^2+(beta.10[4]-beta.30[4])*x^3+
(beta.10[5]-beta.30[5])*x^4+(beta.10[6]-beta.30[6])*x^5,col="black", add=T, lwd=3)
lines(plot.bsp.10vs30[[1]], plot.bsp.10vs30[[2]], col="black", lwd=3)
lines(plot.bsp.10vs30[[1]], plot.bsp.10vs30[[3]], col="black", lwd=3)
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/vergleich-10vs30-poly5.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-plot.r')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
lines(c(1,0),c(0,0), lwd=3)
par(mar=c(5.1,5.1,4.1,2.1))
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.10vs30[[2]]),max(plot.bsp.10vs30[[3]])),
xlab="relative Zeit", ylab="relatives Größe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
plot(0,0,xlim=c(0,1),ylim=c(0,1),
xlab="relative Zeit", ylab="relatives Größe des Unterschieds", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), lwd=3)
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
data=Y.10
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
data="Y.10"
if(data=="Y.10"){data.set=Y.10}else if(data=="Y.30"){data.set=Y.30}
alpha=0.05
niter=1000
nobs=length(data.set)
ngridpoly=nobs
ngrid=nobs
a=0 # diese Werte definieren A
b=1
time=0:(nobs-1)/(nobs-1)
time.2=time^2
time.3=time^3
time.4=time^4
time.5=time^5
time.6=time^6
alpha=0.05
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
X.mat=t(X) %*% X
grad=5
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
X.mat=t(X) %*% X
X.mat.inv=solve(X.mat)
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
k=1
I.tilde=I_tilde(k, grad)[[1]]
V=I.tilde %*% X.mat.inv %*% t(I.tilde)
Y.gls.5 <- gls(data.set ~ time+time.2+time.3+time.4+time.5, correlation=corAR1())
Y.gls.6 <- gls(data.set ~ time+time.2+time.3+time.4+time.5+time.6, correlation=corAR1())
if(grad==5){beta=Y.gls.5$coeff
}else if(grad==6){beta=Y.gls.6$coeff
}else{return("error")}
if(grad==5){sigma=Y.gls.5$sigma
}else if(grad==6){sigma=Y.gls.6$sigma
}else{return("error")}
beta.2=I.tilde %*% beta
if(k==1){x.2=x^(grad)
}else if(k==2){x.2= matrix(c(x^(grad-1),x^(grad)), ncol=2)
}else{return("error")}
par.bsp.R=KB.poly.fast(alpha = 0.05, nobs, k-1, niter, V, a, b, ngridpoly)
plot.KB.R=plot.KB.pruef( nobs , grad, X.mat.inv , beta, sigma, factor = par.bsp.R[[1]], k, ngrid )
if(plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0){legendplacetb="top"}
else if(plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0){legendplacetb="bottom"}
else{legendplacetb="bottom"}
if(plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0){legendplacetb="top"}else if(plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0){legendplacetb="bottom"}else{legendplacetb="bottom"}
if (plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0)
{legendplacetb="top"}else
if (plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0)
{legendplacetb="bottom"}else
{legendplacetb="bottom"}
legendplacetb
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y=legendplacetb, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x="right", y=legendplacetb, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y="bottom", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="left", y="bottom", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
# Graphik erzeugen
if (plot.KB.R[[2]][nobs]>0 && plot.KB.R[[3]]>0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs]<0 && plot.KB.R[[3]][nobs]<0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
par(mar=c(5.1,5.1,4.1,2.1))
plot(x, x.2 %*% beta.2, type="l", xlab="relative Zeit", ylab="relatives Wachstum",
cex=2, lwd=3, cex.axis=2, cex.lab=2, lty="dashed", ylim=c(min(plot.KB.R[[2]]),max(plot.KB.R[[3]])))
lines(c(1,0),c(0,0), lwd=3, lty="dotted")
lines(x, plot.KB.R[[2]], lty="solid", lwd=3)
lines(x, plot.KB.R[[3]], lty="solid", lwd=3)
legend(x="legendplace", legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
legend(x=legendplace, legend=c("x.2 %*% beta.2", "Konfidenzband", "Nullfunktion"),
col=c("black", "black", "black"),cex=2, lwd=3, lty=c("solid", "dashed", "dotted"))
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
plot.KB.R[[2]][nobs]
plot.KB.R[[3]]
plot.KB.R[[3]][nobs]
legendplace
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
legendplace
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else
{legendplace="bottomleft"}
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
if (plot.KB.R[[2]][nobs] > 0 && plot.KB.R[[3]][nobs] > 0)
{legendplace="topleft"}else
if (plot.KB.R[[2]][nobs] < 0 && plot.KB.R[[3]][nobs] < 0)
{legendplace="bottomleft"}else if(data == "Y.30" && k == 2)
{legendplace="toprightleft"}else
{legendplace="bottomleft"}
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/stem-data-pruef.R')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
devtools::load_all(".")
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
library(mvtnorm)
library(nlme)
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
beta
beta.1
beta.3
sigma.1
sigma.3
par.bsp.R
par.bsp.minmax
par.bsp.poly
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-AR.R')
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-AR.R')
seed.1=100
set.seed(seed.1)
grad=3
grad.1=3
grad.3=4
nobs=50
beta.true=c(10,5,-4,7)
sigma.true=1 #0.007545373
phi.true=0.001 #0.8225374  # bestimmt die korrelation
x.raw=c(0:(nobs-1))
x=x.raw/max(x.raw)
X=matrix(data=NA,nrow=nobs,ncol=(grad+1))
for(j in 1:nobs){
for(i in 1:(grad+1)){X[j,i]=x[j]^(i-1)}
}
X.mat=t(X) %*% X
X.mat.inv.1=solve(X.mat)
X.3=matrix(data=NA,nrow=nobs,ncol=(grad.3+1))
for(j in 1:nobs){
for(i in 1:(grad.3+1)){X.3[j,i]=x[j]^(i-1)}
}
X.mat.3=t(X.3) %*% X.3
X.mat.inv.3=solve(X.mat.3)
alpha=0.05
niter=100
ngrid=nobs
a=0 # diese Werte definieren A
b=1
time=0:(nobs-1)/(nobs-1)
time.2=time^2
time.3=time^3
time.4=time^4
alpha=0.05
ngrid=nobs
Upsilon = Upsilon_fun(phi.true, length(x.raw))[[1]]
Upsilon=Upsilon*sigma.true
e=rmvnorm(1,mean=rep(0,length(x.raw)),Upsilon)
y.raw=X %*% beta.true + t(e)
pdf("man/0-Latex/graphics/Beispiel/data-raw-AR.pdf",
width=10,height=8)
plot(x.raw,y.raw, xlab="Zeit", ylab="Wachstum", pch=1, cex=2, lwd=3, cex.axis=2, cex.lab=2)
dev.off()
y=y.raw/max(y.raw)
grad.1=3
Y.gls.1 <- gls(y~time+time.2+time.3,correlation=corAR1())
beta.1=Y.gls.1$coefficients
sigma.1=Y.gls.1$sigma
grad.3=4
Y.gls.3 <- gls(y~time+time.2+time.3+time.4,correlation=corAR1())
beta.3=Y.gls.3$coefficients
sigma.3=Y.gls.3$sigma
pdf("man/0-Latex/graphics/Beispiel/Bsp-Reg-AR.pdf",
width=10,height=8)
plot(x,y, xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
curve(beta.1[1]+beta.1[2]*x+beta.1[3]*x^2+beta.1[4]*x^3,add=T, cex=2, lwd=3)
curve(beta.3[1]+beta.3[2]*x+beta.3[3]*x^2+beta.3[4]*x^3+beta.3[5]*x^4, add=T,
cex=2, lwd=3, lty="dashed")
legend(x="topleft", legend=c("Grad 3", "Grad 4"),
col=c("black", "black"),cex=2, lwd=3, lty=c("solid", "dashed"))
dev.off()
niter=5000
par.bsp.poly.1=KB.poly.fast(alpha, length(y), grad = 3, niter, X.mat.inv.1, a=0, b=1, ngridpoly = 100)
plot.KB.poly.1=plot.KB(length(y), grad = 3, X.mat.inv.1, beta.1, sigma.1, par.bsp.poly.1[[1]],
ngrid = length(y))
par.bsp.poly.3=KB.poly.fast(alpha, length(y), grad = 4, niter, X.mat.inv.3, a=0, b=1, ngridpoly = 100)
plot.KB.poly.3=plot.KB(length(y), grad = 4, X.mat.inv.3, beta.3, sigma.3, par.bsp.poly.1[[1]],
ngrid = length(y))
pdf("man/0-Latex/graphics/Beispiel/Bsp-KB-poly-AR.pdf",
width=10,height=8)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.poly.hetero[[2]]),max(plot.KB.poly.hetero[[3]])),
xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y, cex=2, lwd=3)
curve(beta.1[1]+beta.1[2]*x+beta.1[3]*x^2+beta.1[4]*x^3,add=T, cex=2, lwd=3)
curve(beta.3[1]+beta.3[2]*x+beta.3[3]*x^2+beta.3[4]*x^3+beta.3[5]*x^4, add=T,
cex=2, lwd=3, lty="dashed")
lines(plot.KB.poly.1[[1]], plot.KB.poly.1[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.poly.1[[1]], plot.KB.poly.1[[3]], lty=1, cex=2, lwd=3)
lines(plot.KB.poly.3[[1]], plot.KB.poly.3[[2]], lty="dashed", cex=2, lwd=3)
lines(plot.KB.poly.3[[1]], plot.KB.poly.3[[3]], lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Grad 3", "Grad 4"),
col=c("black","black"),cex=2, lty=c(1,2), lwd=3)
dev.off()
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.poly.3[[2]]),max(plot.KB.poly.3[[3]])),
xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y, cex=2, lwd=3)
dev.off()
dev.off()
dev.off()
plot(0,0,xlim=c(0,1),ylim=c(min(plot.KB.poly.3[[2]]),max(plot.KB.poly.3[[3]])),
xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
points(x,y, cex=2, lwd=3)
curve(beta.1[1]+beta.1[2]*x+beta.1[3]*x^2+beta.1[4]*x^3,add=T, cex=2, lwd=3)
curve(beta.3[1]+beta.3[2]*x+beta.3[3]*x^2+beta.3[4]*x^3+beta.3[5]*x^4, add=T,
cex=2, lwd=3, lty="dashed")
lines(plot.KB.poly.1[[1]], plot.KB.poly.1[[2]], lty=1, cex=2, lwd=3)
lines(plot.KB.poly.1[[1]], plot.KB.poly.1[[3]], lty=1, cex=2, lwd=3)
lines(plot.KB.poly.3[[1]], plot.KB.poly.3[[2]], lty="dashed", cex=2, lwd=3)
lines(plot.KB.poly.3[[1]], plot.KB.poly.3[[3]], lty="dashed", cex=2, lwd=3)
legend(x="topleft", legend=c("Grad 3", "Grad 4"),
col=c("black","black"),cex=2, lty=c(1,2), lwd=3)
dev.off()
delta.mat.hetero=Delta(X.mat.inv.1, X.mat.inv.3)
par.bsp.vergl.hetero=KB.poly.fast(alpha, length(y), grad = 4, niter, delta.mat.hetero[[1]], a=0, b=1,
ngridpoly = length(y))
plot.bsp.vergl.hetero=plot.KB.vergl(y, y, grad = 4, delta.mat.hetero[[1]], beta.1,
beta.3, sigma.1, sigma.3,
par.bsp.vergl.hetero[[1]], ngrid = length(y))
pdf("man/0-Latex/graphics/Beispiel/Bsp-KB-poly-hetero-AR.pdf",
width=10,height=8)
plot(0,0,xlim=c(0,1),ylim=c(min(plot.bsp.vergl.hetero[[2]]),max(plot.bsp.vergl.hetero[[3]])),
xlab="relative Zeit", ylab="relatives Wachstum", cex=2, lwd=3, cex.axis=2, cex.lab=2)
lines(c(1,0),c(0,0), cex=2, lwd=3)
beta.vergl=c(beta.1,0)-beta.3
lines(time, X.3%*%beta.vergl, cex=2, lwd=3)
lines(plot.bsp.vergl.hetero[[1]], plot.bsp.vergl.hetero[[2]], col="black", cex=2, lwd=3)
lines(plot.bsp.vergl.hetero[[1]], plot.bsp.vergl.hetero[[3]], col="black", cex=2, lwd=3)
dev.off()
par=c( par.bsp.poly.hetero[[1]])
par=c( par.bsp.poly.3[[1]])
par.vergl=c( par.bsp.vergl.3[[1]])
par.vergl=c( par.bsp.vergl.hetero[[1]])
par=c( par.bsp.poly.3[[1]])
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-AR.R')
par.bsp.vergl.hetero
beta.1
beta.3
sigma.1
sigma.3
par.bsp.poly.1
par.bsp.poly.3
devtools::load_all(".")
library(nlme)
library(mvtnorm)
sigma.1
par.bsp.R
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-R.R')
par.bsp.R
par.bsp.R
par.bsp.minmax
par.bsp.poly
beta.3
sigma.3
teststat
q
par.bsp.vergl
source('~/Dokumente/R/07-Bachelorarbeit-Konfidenzbaender/KBminmaxpoly/man/Beispiel-AR.R')
beta.1
sigma.1
Y.gls.1
beta.1 * max(y.raw)
sigma.1 * max(y.raw)
Y.gls.3
beta.3
sigma.3
Y.gls.3
par.bsp.vergl.hetero
par.bsp.poly.1
